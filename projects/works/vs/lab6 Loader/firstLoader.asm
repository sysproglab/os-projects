org		0x7C00
bits	16

;Начало работы первичного загрузчика
cli ; запрещение аппаратных прерываний
mov ax,cs ; сегмент кода
mov ds,ax ; сегмент данных
mov ss,ax ; сегмент стека
mov es,ax ; дополнительный сегмент данных
mov sp,7c00h ; Инициализация стека
mov bx,7c00h ; Адрес загрузки

;Копируем себя по адресу 0x1000
mov si,7c00h	; Копируем, начиная с адреса загрузки
mov di,1000h	; Адрес, куда производим копирование
mov cx,200h	; Сколько байт копируем (512 байт)
rep movsb

jmp 0000h:101fh ; Передаем управление по новому адресу

mov si, TestString	;Записываем в стек указатель на строку
call PrintString	;Вызов процедуры печати строки

PrintCharacter:	;Процедура печати символа
	mov ah, 0x0E	;Флаг того, что нам нужно вывести на экран один символ
	mov bh, 0x00	;Номер страницы
	mov bl, 0x07	;Флаг того, что выводится светлый текст на черном фоне

	int 0x10	;Вызов прерывания видео
	ret	;Возращение к вызванной процедуре

PrintString:	;Процедура печати строки
next_character:
	mov al, [si]	;Берем один байт из строки и записываем его в регистр AL
	inc si	;Увеличиваем указатель SI
	or al, al	;Проверка конца строки
	jz exit_function
	call PrintCharacter ;Печатаем символ
	jmp next_character
exit_function:

; загрузка загрузочной записи активного раздела	
mov si, DAP 
mov ah, 0x42	; функция
mov dl, 0x80	; номер диска
int 0x13
	
jmp 0000h:7c00h	; переходим ко вторичному загрузчику
	
	
DAP: 
	dw 0x10, 0x02, 0x7c00, 0x00 ; Считываем 2 сектора и помещаем в оперативную память по адресу 0x7c00
	dd 0x3F	;абсолютный адрес первого сектора
	dd 0x0000

TestString db 'Copying finished', 13, 10, 0

times 510 - ($ - $$) db 0	;Заполняем оставшиеся байты нулями
dw 0xAA55	;Добавляем сигнатуру в конец загрузчика
